{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNtyeAJcf343jnrOb0svYc/"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 43,
      "metadata": {
        "id": "lQyj7g8UKMg_"
      },
      "outputs": [],
      "source": [
        "#Load the libraries\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import nltk\n",
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.preprocessing import LabelBinarizer\n",
        "from nltk.corpus import stopwords\n",
        "from nltk.stem.porter import PorterStemmer\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "from nltk.tokenize import word_tokenize,sent_tokenize\n",
        "import re,string,unicodedata\n",
        "from nltk.tokenize.toktok import ToktokTokenizer\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import os\n",
        "print(os.getcwd())\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wo2egS1ULPUT",
        "outputId": "9c4aac59-d95d-4321-b33d-aae94acd65f8"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df= pd.read_excel('/Icedip.xlsx')\n",
        "df\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "B3ClLIBBKh0X",
        "outputId": "36d2be7c-9223-4d87-bef4-a1e717625ffa"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      Name  Percieved creativity  \\\n",
              "0                   Raghu                      3   \n",
              "1            Ashvadharani                      8   \n",
              "2         Sangameshwaran S                     7   \n",
              "3       My name is Gowtham                     7   \n",
              "4          akshaya priya s                    10   \n",
              "5            A sujit kumar                    10   \n",
              "6             Pradeep R P                      7   \n",
              "7                    STEVE                     5   \n",
              "8                Keerthana                     6   \n",
              "9                   Lokesh                     7   \n",
              "10              Sushmidha                      8   \n",
              "11      Kandha kamatchi S                      6   \n",
              "12                  Anusha                     7   \n",
              "13               Yuvaraj R                     7   \n",
              "14         Ramesh Kumar B                      8   \n",
              "15         Dineshkumar R A                     7   \n",
              "16           Sudharsan.M.H                     4   \n",
              "17            Devi priya P                     7   \n",
              "18                Afshaan                      8   \n",
              "19                 Leo Das                    10   \n",
              "20                 Dharani                     7   \n",
              "21  Sharthkumar Sabarish K                     7   \n",
              "22      Vijay Rajasekaran                      7   \n",
              "\n",
              "   How often do you come up with new and innovative ideas in your personal or professional life?  \\\n",
              "0                                        Occasionally                                              \n",
              "1                                               Often                                              \n",
              "2                                               Often                                              \n",
              "3                                               Often                                              \n",
              "4                                               Often                                              \n",
              "5                                               Often                                              \n",
              "6                                        Occasionally                                              \n",
              "7                                        Occasionally                                              \n",
              "8                                        Occasionally                                              \n",
              "9                                        Occasionally                                              \n",
              "10                                       Occasionally                                              \n",
              "11                                       Occasionally                                              \n",
              "12                                       Occasionally                                              \n",
              "13                                       Occasionally                                              \n",
              "14                                       Occasionally                                              \n",
              "15                                       Occasionally                                              \n",
              "16                                       Occasionally                                              \n",
              "17                                       Occasionally                                              \n",
              "18                                              Often                                              \n",
              "19                                      Very Frequent                                              \n",
              "20                                       Occasionally                                              \n",
              "21                                       Occasionally                                              \n",
              "22                                       Occasionally                                              \n",
              "\n",
              "   How do you approach problem-solving tasks? Are you inclined to find unconventional solutions or stick to traditional methods?  \\\n",
              "0                                                 Yes                                                                              \n",
              "1                                          On my own                                                                               \n",
              "2   Try to identify the root cause. Unconventional...                                                                              \n",
              "3                 Depending on the nature of the task                                                                              \n",
              "4                 Depending on the nature of the task                                                                              \n",
              "5   Always look for alternatives choose the best o...                                                                              \n",
              "6                              Depends on the problem                                                                              \n",
              "7                    Anything that works or suitable                                                                               \n",
              "8                                 Traditional methods                                                                              \n",
              "9                                               Both                                                                               \n",
              "10  I get forward to solve problems that does not ...                                                                              \n",
              "11          Mostly sticking to traditional solutions                                                                               \n",
              "12                                               Both                                                                              \n",
              "13                                       Mix of Both                                                                               \n",
              "14                                       Traditional                                                                               \n",
              "15  Mostly traditional methods unless creative one...                                                                              \n",
              "16                                           I don't                                                                               \n",
              "17                          Unconventional solutions                                                                               \n",
              "18  I'll try to find new ways of approaching tasks...                                                                              \n",
              "19                                   Using Chubramani                                                                              \n",
              "20                    Depends upon the task at hand.                                                                               \n",
              "21  First try some unconventional methods... If th...                                                                              \n",
              "22                                Traditional methods                                                                              \n",
              "\n",
              "   Are you open to new experiences, different perspectives, and change in your life and work?  \\\n",
              "0                                                 Yes                                           \n",
              "1                                                Yes                                            \n",
              "2                                                 Yes                                           \n",
              "3                                                 Yes                                           \n",
              "4                                                 Yes                                           \n",
              "5   A 100 percentage yes.....new experience, expos...                                           \n",
              "6                                                  No                                           \n",
              "7                                     To some extent                                            \n",
              "8                                               Maybe                                           \n",
              "9                                                 Yes                                           \n",
              "10  Yes I get to explore for new experience to get...                                           \n",
              "11                                                Yes                                           \n",
              "12                                                Yes                                           \n",
              "13                                                Yes                                           \n",
              "14                                                Yes                                           \n",
              "15                                                Yes                                           \n",
              "16                                                 No                                           \n",
              "17                                                Yes                                           \n",
              "18                                                Yes                                           \n",
              "19                                                Yes                                           \n",
              "20                                                Yes                                           \n",
              "21                                                Yes                                           \n",
              "22                                                Yes                                           \n",
              "\n",
              "   To what extent are you comfortable taking risks and stepping out of your comfort zone to explore creative endeavors?  \\\n",
              "0                                                High                                                                     \n",
              "1                                       Great extent                                                                      \n",
              "2                                        Great extent                                                                     \n",
              "3                            On a scale of 1 to 10, 9                                                                     \n",
              "4                              On a scale of 1- 10, 9                                                                     \n",
              "5   Always stepping out and taking the risk... und...                                                                     \n",
              "6                                                  No                                                                     \n",
              "7                                                5/10                                                                     \n",
              "8                                                0.75                                                                     \n",
              "9   To such extent that will help me acquire new k...                                                                     \n",
              "10  I love to take some risk in life to make it mo...                                                                     \n",
              "11  If the situation demands I will try to take risks                                                                     \n",
              "12                                      Great extent                                                                      \n",
              "13                                     To some extent                                                                     \n",
              "14              I'm quite comfortable in taking risks                                                                     \n",
              "15                                   Within my limits                                                                     \n",
              "16                                I don't take Rizzzk                                                                     \n",
              "17   To the extent that it doesn't involve high risk                                                                      \n",
              "18                         I like taking up new tasks                                                                     \n",
              "19                You know my identity - You are dead                                                                     \n",
              "20                                To a moderate level                                                                     \n",
              "21  I am quite comfortable with taking risks becau...                                                                     \n",
              "22                                        Risk Taking                                                                     \n",
              "\n",
              "   Do you engage in creative hobbies or activities outside of your work or studies? If so, please describe them.  \\\n",
              "0                                                   S                                                              \n",
              "1                                      Yes, artworks                                                               \n",
              "2                                                  No                                                              \n",
              "3                               I enjoy reading books                                                              \n",
              "4                                      I enjoy baking                                                              \n",
              "5   Yes...I do wall painting and acrylic and prese...                                                              \n",
              "6                                                  No                                                              \n",
              "7                                     Writing Letters                                                              \n",
              "8                                               Nope                                                               \n",
              "9                                                  No                                                              \n",
              "10  I do some art works and painting to make my se...                                                              \n",
              "11                                                 No                                                              \n",
              "12                                                 No                                                              \n",
              "13                                         Yes. Yes.                                                               \n",
              "14                                               Nope                                                              \n",
              "15                                                 No                                                              \n",
              "16                                                Yes                                                              \n",
              "17                               Yes. Writing stories                                                              \n",
              "18                                   Yes- Numismatics                                                              \n",
              "19                     Dancing to karu karu karupaayi                                                              \n",
              "20                                           Art work                                                              \n",
              "21          Been writing a book for quite a while now                                                              \n",
              "22                                                 No                                                              \n",
              "\n",
              "   What outlets or methods do you use to express your creativity (e.g., writing, art, music, etc.)?  \\\n",
              "0                                             Dancing                                                 \n",
              "1                                                Art                                                  \n",
              "2                                                 Art                                                 \n",
              "3                                  Personalizing Home                                                 \n",
              "4                                 Personalising home                                                  \n",
              "5                            Art, regressive writing.                                                 \n",
              "6                                            Writing                                                  \n",
              "7                                            Writings                                                 \n",
              "8                                     Writing (anime)                                                 \n",
              "9                                          Art, chess                                                 \n",
              "10                             Art work and painting                                                  \n",
              "11                                                  -                                                 \n",
              "12                                               None                                                 \n",
              "13                                                Art                                                 \n",
              "14                                            Writing                                                 \n",
              "15                                   Cricket analysis                                                 \n",
              "16                                         U-V METHOD                                                 \n",
              "17                                           Writing                                                  \n",
              "18                                              Music                                                 \n",
              "19                                        WILD BEANS                                                  \n",
              "20                                           Art work                                                 \n",
              "21                                            Writing                                                 \n",
              "22                                             Sports                                                 \n",
              "\n",
              "   Can you recall a specific creative challenge you have faced recently? How did you overcome it?  \\\n",
              "0                                       Deep learning                                               \n",
              "1                                                 No                                                \n",
              "2                                                  No                                               \n",
              "3                               Haven't any recently                                                \n",
              "4                                                  No                                               \n",
              "5   During internship...I was able to solve proble...                                               \n",
              "6                                                  No                                               \n",
              "7                     Project Management Examination                                                \n",
              "8   Assessments and assignments. Writing about gam...                                               \n",
              "9         Activities in obt are overcame by team work                                               \n",
              "10                                 Obt dragon Making                                                \n",
              "11                             Not anything recently                                                \n",
              "12                                                 No                                               \n",
              "13                                                 No                                               \n",
              "14                                                 No                                               \n",
              "15  Wanted to identify a way to reduce pressure du...                                               \n",
              "16                                            I can't                                               \n",
              "17                                 No. I don't recall                                               \n",
              "18  Building a city activity - Overcame it through...                                               \n",
              "19  Yes.. Telling an emotional creative story to S...                                               \n",
              "20                                                 No                                               \n",
              "21                                               Nope                                               \n",
              "22  We were given a task to come up with creative ...                                               \n",
              "\n",
              "   Where do you typically draw inspiration from for your creative pursuits or problem-solving efforts?  \\\n",
              "0                                    Fast and furious                                                    \n",
              "1                                             Myself                                                     \n",
              "2                                           Anywhere                                                     \n",
              "3                                             Cinema                                                     \n",
              "4                             Problem solving efforts                                                    \n",
              "5   Reading lot books help me a lot to think...one...                                                    \n",
              "6                                                  No                                                    \n",
              "7                                             ChatGPT                                                    \n",
              "8                                    ChatGPT and Bard                                                    \n",
              "9                                           Internet                                                     \n",
              "10                                      Social media                                                     \n",
              "11                           From friends and family                                                     \n",
              "12                                             Movies                                                    \n",
              "13                                           Chat GPT                                                    \n",
              "14                                       Life lessons                                                    \n",
              "15                                              Anime                                                    \n",
              "16                                            ChatGPT                                                    \n",
              "17                          Books and Online content                                                     \n",
              "18  The thought to perform better than others is m...                                                    \n",
              "19                                                                                                       \n",
              "20  From people who have successfully implemented ...                                                    \n",
              "21                               Novels or Web Series                                                    \n",
              "22                                           AI tools                                                    \n",
              "\n",
              "   What are your current creative goals or aspirations? Where do you see yourself applying your creativity in the future?  \n",
              "0                                                  GM                                                                      \n",
              "1                                   In everyday life                                                                       \n",
              "2                                             No idea                                                                      \n",
              "3                                                 Job                                                                      \n",
              "4                                                 Job                                                                      \n",
              "5                                Consulting and music                                                                      \n",
              "6                                                  No                                                                      \n",
              "7                                             IDK Bro                                                                      \n",
              "8                                             No idea                                                                      \n",
              "9                             As of now no such goals                                                                      \n",
              "10  I love to explore with more art works and work...                                                                      \n",
              "11                             May be in my workplace                                                                      \n",
              "12                                               None                                                                      \n",
              "13                              No specific goals yet                                                                      \n",
              "14                        No creative goals as of now                                                                      \n",
              "15                         Nothing. Going with flow.                                                                       \n",
              "16                   Owning a coffee shop in Kashmir                                                                       \n",
              "17                         To write a fictional book                                                                       \n",
              "18     In whatever job and work that I would be doing                                                                      \n",
              "19                                          Join LCU                                                                       \n",
              "20  At workplace- in generating and implementation...                                                                      \n",
              "21                               Not willing to share                                                                      \n",
              "22                            At place of employment                                                                       "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7729f8e3-9242-4f5c-afb6-73278db39d3c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Percieved creativity</th>\n",
              "      <th>How often do you come up with new and innovative ideas in your personal or professional life?</th>\n",
              "      <th>How do you approach problem-solving tasks? Are you inclined to find unconventional solutions or stick to traditional methods?</th>\n",
              "      <th>Are you open to new experiences, different perspectives, and change in your life and work?</th>\n",
              "      <th>To what extent are you comfortable taking risks and stepping out of your comfort zone to explore creative endeavors?</th>\n",
              "      <th>Do you engage in creative hobbies or activities outside of your work or studies? If so, please describe them.</th>\n",
              "      <th>What outlets or methods do you use to express your creativity (e.g., writing, art, music, etc.)?</th>\n",
              "      <th>Can you recall a specific creative challenge you have faced recently? How did you overcome it?</th>\n",
              "      <th>Where do you typically draw inspiration from for your creative pursuits or problem-solving efforts?</th>\n",
              "      <th>What are your current creative goals or aspirations? Where do you see yourself applying your creativity in the future?</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Raghu</td>\n",
              "      <td>3</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Yes</td>\n",
              "      <td>High</td>\n",
              "      <td>S</td>\n",
              "      <td>Dancing</td>\n",
              "      <td>Deep learning</td>\n",
              "      <td>Fast and furious</td>\n",
              "      <td>GM</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Ashvadharani</td>\n",
              "      <td>8</td>\n",
              "      <td>Often</td>\n",
              "      <td>On my own</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Great extent</td>\n",
              "      <td>Yes, artworks</td>\n",
              "      <td>Art</td>\n",
              "      <td>No</td>\n",
              "      <td>Myself</td>\n",
              "      <td>In everyday life</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sangameshwaran S</td>\n",
              "      <td>7</td>\n",
              "      <td>Often</td>\n",
              "      <td>Try to identify the root cause. Unconventional...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Great extent</td>\n",
              "      <td>No</td>\n",
              "      <td>Art</td>\n",
              "      <td>No</td>\n",
              "      <td>Anywhere</td>\n",
              "      <td>No idea</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>My name is Gowtham</td>\n",
              "      <td>7</td>\n",
              "      <td>Often</td>\n",
              "      <td>Depending on the nature of the task</td>\n",
              "      <td>Yes</td>\n",
              "      <td>On a scale of 1 to 10, 9</td>\n",
              "      <td>I enjoy reading books</td>\n",
              "      <td>Personalizing Home</td>\n",
              "      <td>Haven't any recently</td>\n",
              "      <td>Cinema</td>\n",
              "      <td>Job</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>akshaya priya s</td>\n",
              "      <td>10</td>\n",
              "      <td>Often</td>\n",
              "      <td>Depending on the nature of the task</td>\n",
              "      <td>Yes</td>\n",
              "      <td>On a scale of 1- 10, 9</td>\n",
              "      <td>I enjoy baking</td>\n",
              "      <td>Personalising home</td>\n",
              "      <td>No</td>\n",
              "      <td>Problem solving efforts</td>\n",
              "      <td>Job</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A sujit kumar</td>\n",
              "      <td>10</td>\n",
              "      <td>Often</td>\n",
              "      <td>Always look for alternatives choose the best o...</td>\n",
              "      <td>A 100 percentage yes.....new experience, expos...</td>\n",
              "      <td>Always stepping out and taking the risk... und...</td>\n",
              "      <td>Yes...I do wall painting and acrylic and prese...</td>\n",
              "      <td>Art, regressive writing.</td>\n",
              "      <td>During internship...I was able to solve proble...</td>\n",
              "      <td>Reading lot books help me a lot to think...one...</td>\n",
              "      <td>Consulting and music</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Pradeep R P</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Depends on the problem</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>Writing</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>STEVE</td>\n",
              "      <td>5</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Anything that works or suitable</td>\n",
              "      <td>To some extent</td>\n",
              "      <td>5/10</td>\n",
              "      <td>Writing Letters</td>\n",
              "      <td>Writings</td>\n",
              "      <td>Project Management Examination</td>\n",
              "      <td>ChatGPT</td>\n",
              "      <td>IDK Bro</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Keerthana</td>\n",
              "      <td>6</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Traditional methods</td>\n",
              "      <td>Maybe</td>\n",
              "      <td>0.75</td>\n",
              "      <td>Nope</td>\n",
              "      <td>Writing (anime)</td>\n",
              "      <td>Assessments and assignments. Writing about gam...</td>\n",
              "      <td>ChatGPT and Bard</td>\n",
              "      <td>No idea</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Lokesh</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Both</td>\n",
              "      <td>Yes</td>\n",
              "      <td>To such extent that will help me acquire new k...</td>\n",
              "      <td>No</td>\n",
              "      <td>Art, chess</td>\n",
              "      <td>Activities in obt are overcame by team work</td>\n",
              "      <td>Internet</td>\n",
              "      <td>As of now no such goals</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sushmidha</td>\n",
              "      <td>8</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>I get forward to solve problems that does not ...</td>\n",
              "      <td>Yes I get to explore for new experience to get...</td>\n",
              "      <td>I love to take some risk in life to make it mo...</td>\n",
              "      <td>I do some art works and painting to make my se...</td>\n",
              "      <td>Art work and painting</td>\n",
              "      <td>Obt dragon Making</td>\n",
              "      <td>Social media</td>\n",
              "      <td>I love to explore with more art works and work...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Kandha kamatchi S</td>\n",
              "      <td>6</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Mostly sticking to traditional solutions</td>\n",
              "      <td>Yes</td>\n",
              "      <td>If the situation demands I will try to take risks</td>\n",
              "      <td>No</td>\n",
              "      <td>-</td>\n",
              "      <td>Not anything recently</td>\n",
              "      <td>From friends and family</td>\n",
              "      <td>May be in my workplace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Anusha</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Both</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Great extent</td>\n",
              "      <td>No</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>Movies</td>\n",
              "      <td>None</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Yuvaraj R</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Mix of Both</td>\n",
              "      <td>Yes</td>\n",
              "      <td>To some extent</td>\n",
              "      <td>Yes. Yes.</td>\n",
              "      <td>Art</td>\n",
              "      <td>No</td>\n",
              "      <td>Chat GPT</td>\n",
              "      <td>No specific goals yet</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Ramesh Kumar B</td>\n",
              "      <td>8</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Traditional</td>\n",
              "      <td>Yes</td>\n",
              "      <td>I'm quite comfortable in taking risks</td>\n",
              "      <td>Nope</td>\n",
              "      <td>Writing</td>\n",
              "      <td>No</td>\n",
              "      <td>Life lessons</td>\n",
              "      <td>No creative goals as of now</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Dineshkumar R A</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Mostly traditional methods unless creative one...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Within my limits</td>\n",
              "      <td>No</td>\n",
              "      <td>Cricket analysis</td>\n",
              "      <td>Wanted to identify a way to reduce pressure du...</td>\n",
              "      <td>Anime</td>\n",
              "      <td>Nothing. Going with flow.</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sudharsan.M.H</td>\n",
              "      <td>4</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>I don't</td>\n",
              "      <td>No</td>\n",
              "      <td>I don't take Rizzzk</td>\n",
              "      <td>Yes</td>\n",
              "      <td>U-V METHOD</td>\n",
              "      <td>I can't</td>\n",
              "      <td>ChatGPT</td>\n",
              "      <td>Owning a coffee shop in Kashmir</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Devi priya P</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Unconventional solutions</td>\n",
              "      <td>Yes</td>\n",
              "      <td>To the extent that it doesn't involve high risk</td>\n",
              "      <td>Yes. Writing stories</td>\n",
              "      <td>Writing</td>\n",
              "      <td>No. I don't recall</td>\n",
              "      <td>Books and Online content</td>\n",
              "      <td>To write a fictional book</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Afshaan</td>\n",
              "      <td>8</td>\n",
              "      <td>Often</td>\n",
              "      <td>I'll try to find new ways of approaching tasks...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>I like taking up new tasks</td>\n",
              "      <td>Yes- Numismatics</td>\n",
              "      <td>Music</td>\n",
              "      <td>Building a city activity - Overcame it through...</td>\n",
              "      <td>The thought to perform better than others is m...</td>\n",
              "      <td>In whatever job and work that I would be doing</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Leo Das</td>\n",
              "      <td>10</td>\n",
              "      <td>Very Frequent</td>\n",
              "      <td>Using Chubramani</td>\n",
              "      <td>Yes</td>\n",
              "      <td>You know my identity - You are dead</td>\n",
              "      <td>Dancing to karu karu karupaayi</td>\n",
              "      <td>WILD BEANS</td>\n",
              "      <td>Yes.. Telling an emotional creative story to S...</td>\n",
              "      <td></td>\n",
              "      <td>Join LCU</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Dharani</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Depends upon the task at hand.</td>\n",
              "      <td>Yes</td>\n",
              "      <td>To a moderate level</td>\n",
              "      <td>Art work</td>\n",
              "      <td>Art work</td>\n",
              "      <td>No</td>\n",
              "      <td>From people who have successfully implemented ...</td>\n",
              "      <td>At workplace- in generating and implementation...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Sharthkumar Sabarish K</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>First try some unconventional methods... If th...</td>\n",
              "      <td>Yes</td>\n",
              "      <td>I am quite comfortable with taking risks becau...</td>\n",
              "      <td>Been writing a book for quite a while now</td>\n",
              "      <td>Writing</td>\n",
              "      <td>Nope</td>\n",
              "      <td>Novels or Web Series</td>\n",
              "      <td>Not willing to share</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Vijay Rajasekaran</td>\n",
              "      <td>7</td>\n",
              "      <td>Occasionally</td>\n",
              "      <td>Traditional methods</td>\n",
              "      <td>Yes</td>\n",
              "      <td>Risk Taking</td>\n",
              "      <td>No</td>\n",
              "      <td>Sports</td>\n",
              "      <td>We were given a task to come up with creative ...</td>\n",
              "      <td>AI tools</td>\n",
              "      <td>At place of employment</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7729f8e3-9242-4f5c-afb6-73278db39d3c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7729f8e3-9242-4f5c-afb6-73278db39d3c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7729f8e3-9242-4f5c-afb6-73278db39d3c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0be9fe93-40cc-4430-9c28-4952fdf8f0bf\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0be9fe93-40cc-4430-9c28-4952fdf8f0bf')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0be9fe93-40cc-4430-9c28-4952fdf8f0bf button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Rename columns\n",
        "new_column_names = {\n",
        "    'How often do you come up with new and innovative ideas in your personal or professional life?': 'Innovative Ideas',\n",
        "    'How do you approach problem-solving tasks? Are you inclined to find unconventional solutions or stick to traditional methods?': 'Problem Solving',\n",
        "    'Are you open to new experiences, different perspectives, and change in your life and work?': 'Different perspective',\n",
        "    'To what extent are you comfortable taking risks and stepping out of your comfort zone to explore creative endeavors?': 'Risk Factor',\n",
        "    'Do you engage in creative hobbies or activities outside of your work or studies? If so, please describe them.': 'Creative Hobbies',\n",
        "    'What outlets or methods do you use to express your creativity (e.g., writing, art, music, etc.)?': 'Express Creativity',\n",
        "}\n",
        "\n",
        "df.rename(columns=new_column_names, inplace=True)\n",
        "\n",
        "new_column_names = {\n",
        "    'Can you recall a specific creative challenge you have faced recently? How did you overcome it?': 'Creative Challenge',\n",
        "    'Where do you typically draw inspiration from for your creative pursuits or problem-solving efforts?': 'Inspired Creativity',\n",
        "    'What are your current creative goals or aspirations? Where do you see yourself applying your creativity in the future?': 'Goals',\n",
        "}\n",
        "\n",
        "df.rename(columns=new_column_names, inplace=True)\n",
        "\n",
        "# Print the list of column names to check for correct names\n",
        "print(df.columns)\n",
        "\n",
        "# Remove leading or trailing spaces in column names\n",
        "df.columns = df.columns.str.strip()\n",
        "\n",
        "# Replace the correct column name\n",
        "column_name = 'Percieved creativity'\n",
        "\n",
        "# Divide the values in the specified column by 2\n",
        "df[column_name] = df[column_name] / 2\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cZugaLcmWAcd",
        "outputId": "0d6b99c3-fcf1-466f-e970-b5a5c0ae482e"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Index(['Name', 'Percieved creativity', 'Innovative Ideas', 'Problem Solving',\n",
            "       'Different perspective', 'Risk Factor', 'Creative Hobbies',\n",
            "       'Express Creativity', 'Creative Challenge', 'Inspired Creativity',\n",
            "       'Goals'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.fillna(method='ffill', inplace=True)\n",
        "print(\"Number of null values in each column:\")\n",
        "print(df.isnull().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SCwvhdIYW8B3",
        "outputId": "d0309180-cd28-431d-d746-f664a51ae0bd"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of null values in each column:\n",
            "Name                     0\n",
            "Percieved creativity     0\n",
            "Innovative Ideas         0\n",
            "Problem Solving          0\n",
            "Different perspective    0\n",
            "Risk Factor              0\n",
            "Creative Hobbies         0\n",
            "Express Creativity       0\n",
            "Creative Challenge       0\n",
            "Inspired Creativity      0\n",
            "Goals                    0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "\n",
        "# Mapping function to assign points\n",
        "def map_frequency_to_points(frequency):\n",
        "    if frequency == 'Rarely':\n",
        "        return -2\n",
        "    elif frequency == 'Occasionally':\n",
        "        return 3\n",
        "    elif frequency == 'Often':\n",
        "        return 4\n",
        "    elif frequency == 'Very Frequent':\n",
        "        return 5\n",
        "    else:\n",
        "        return 0  # Default value for cases not covered by conditions\n",
        "\n",
        "# Apply the mapping function directly to the 'Innovative Ideas' column\n",
        "df['Innovative Ideas'] = df['Innovative Ideas'].map(map_frequency_to_points)\n",
        "\n"
      ],
      "metadata": {
        "id": "efVSWGPKa5Li"
      },
      "execution_count": 48,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "# Define the mapping function\n",
        "def clean_problem_solving(text):\n",
        "    words = text.lower().split()\n",
        "\n",
        "    # Only keep the specified words\n",
        "    valid_words = ['traditional', 'unconventional', 'both', 'mix', 'own']\n",
        "    cleaned_words = [word for word in words if word in valid_words]\n",
        "\n",
        "    # Join the cleaned words back into a sentence\n",
        "    cleaned_text = ' '.join(cleaned_words)\n",
        "    return cleaned_text\n",
        "\n",
        "# Apply the mapping function to the 'Problem Solving' column\n",
        "df['Cleaned Problem Solving'] = df['Problem Solving'].apply(clean_problem_solving)\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "J875qTb5ez34"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop the original 'Problem Solving' column\n",
        "df.drop(columns=['Problem Solving'], inplace=True)\n",
        "\n",
        "# Rename the 'Cleaned Problem Solving' column to 'Problem Solving'\n",
        "df.rename(columns={'Cleaned Problem Solving': 'Problem Solving'}, inplace=True)\n",
        "\n"
      ],
      "metadata": {
        "id": "HdCfDna9wE48"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Mapping function to assign points\n",
        "def map_problem_solving_to_marks(problem_solving):\n",
        "    words = problem_solving.lower().split()\n",
        "\n",
        "    if 'traditional' in words and 'unconventional' in words:\n",
        "        return 5\n",
        "    elif 'traditional' in words:\n",
        "        return 2\n",
        "    elif 'unconventional' in words:\n",
        "        return 3\n",
        "    elif 'both' in words or 'mix' in words or 'own' in words:\n",
        "        return 5\n",
        "    else:\n",
        "        return 1\n",
        "\n",
        "# Apply the mapping function directly to the 'Problem Solving' column\n",
        "df['Problem Solving Marks'] = df['Problem Solving'].map(map_problem_solving_to_marks)\n",
        "\n"
      ],
      "metadata": {
        "id": "1kVcf_SNwJQy"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop the original 'Problem Solving' column\n",
        "df.drop(columns=['Problem Solving'], inplace=True)\n",
        "\n",
        "# Rename the 'Cleaned Problem Solving' column to 'Problem Solving'\n",
        "df.rename(columns={'  Problem Solving Marks ': 'Problem Solving'}, inplace=True)"
      ],
      "metadata": {
        "id": "oYo8Qv4VxCTZ"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import re\n",
        "\n",
        "# Define the mapping function\n",
        "def clean_problem_solving(text):\n",
        "    words = text.lower().split()\n",
        "\n",
        "    # Only keep the specified words\n",
        "    valid_words = ['yes', 'no', 'extent', 'maybe']\n",
        "    cleaned_words = [word for word in words if word in valid_words]\n",
        "\n",
        "    # Join the cleaned words back into a sentence\n",
        "    cleaned_text = ' '.join(cleaned_words)\n",
        "    return cleaned_text\n",
        "\n",
        "# Remove extra space in column name\n",
        "df.rename(columns={'Different perspective ': 'Different perspective'}, inplace=True)\n",
        "\n",
        "# Apply the mapping function to the 'Different Perspective' column\n",
        "df['Cleaned Different perspective'] = df['Different perspective'].apply(clean_problem_solving)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "AjMouAeIxVj1"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#mapping\n",
        "# Mapping function to assign points\n",
        "def map_problem_solving_to_marks(problem_solving):\n",
        "    words = problem_solving.lower().split()\n",
        "\n",
        "    if 'yes' in words:\n",
        "        return 5\n",
        "    elif 'no' in words:\n",
        "        return 2.5\n",
        "    elif 'extent' in words and 'Maybe':\n",
        "        return 1\n",
        "    else:\n",
        "        return 0\n",
        "\n",
        "# Apply the mapping function directly to the 'Problem Solving' column\n",
        "df['Cleaned Different Perspective Marks'] = df['Cleaned Different perspective'].map(map_problem_solving_to_marks)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "3vpq1pyizpM6"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Drop the original 'Different perspective' and 'Cleaned Different perspective' columns\n",
        "df.drop(columns=['Different perspective', 'Cleaned Different perspective'], inplace=True)\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "gLRcI4ON04xV"
      },
      "execution_count": 55,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "unique_values = df['Risk Factor'].unique()\n",
        "print(\"Unique Values in 'Problem solving':\", unique_values)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-p8xVTBA3VUZ",
        "outputId": "2a6c5afe-bf3e-4e18-d487-209ab3275329"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Unique Values in 'Problem solving': ['High' 'Great extent ' 'Great extent' 'On a scale of 1 to 10, 9'\n",
            " 'On a scale of 1- 10, 9'\n",
            " 'Always stepping out and taking the risk... understanding and calculating the worst case scenario and moving forward.'\n",
            " 'No' '5/10' 0.75\n",
            " 'To such extent that will help me acquire new knowledge '\n",
            " 'I love to take some risk in life to make it more interesting I keep doing it often'\n",
            " 'If the situation demands I will try to take risks' 'To some extent'\n",
            " \"I'm quite comfortable in taking risks\" 'Within my limits'\n",
            " \"I don't take Rizzzk\" \"To the extent that it doesn't involve high risk \"\n",
            " 'I like taking up new tasks' 'You know my identity - You are dead'\n",
            " 'To a moderate level'\n",
            " 'I am quite comfortable with taking risks because it motivates me to do a particular activity even more than usual'\n",
            " 'Risk Taking']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import nltk\n",
        "nltk.download('stopwords')\n",
        "import nltk\n",
        "\n",
        "# Download the 'punkt' resource\n",
        "nltk.download('punkt')\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ndSCyahEvmI3",
        "outputId": "959e553e-1312-47b7-c157-0326c7526b44"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n",
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Package punkt is already up-to-date!\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 57
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from nltk.tokenize import word_tokenize\n",
        "from nltk.corpus import stopwords\n",
        "\n",
        "# Set stopwords to English\n",
        "stop = set(stopwords.words('english'))\n",
        "\n",
        "# Removing the stopwords and tokenizing\n",
        "def tokenize_and_remove_stopwords(text, is_lower_case=False):\n",
        "    if isinstance(text, str):  # Check if the input is a string\n",
        "        tokens = word_tokenize(text)\n",
        "        tokens = [token.strip() for token in tokens]\n",
        "        if is_lower_case:\n",
        "            filtered_tokens = [token for token in tokens if token not in stop]\n",
        "        else:\n",
        "            filtered_tokens = [token for token in tokens if token.lower() not in stop]\n",
        "        return filtered_tokens\n",
        "    else:\n",
        "        return []\n",
        "\n",
        "# Apply function on 'Risk Factor' column\n",
        "df['Tokenized_Risk_Factor'] = df['Risk Factor'].apply(tokenize_and_remove_stopwords)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "rCgUu99YvYHy"
      },
      "execution_count": 58,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.to_markdown())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7W_lUTnbxB5a",
        "outputId": "ba9fb63b-5c96-49b8-9c1e-75da6ddb0b39"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "|    | Name                   |   Percieved creativity |   Innovative Ideas | Risk Factor                                                                                                          | Creative Hobbies                                                                | Express Creativity       | Creative Challenge                                                                                                                                                                                                          | Inspired Creativity                                                                                                          | Goals                                                                |   Problem Solving Marks |   Cleaned Different Perspective Marks | Tokenized_Risk_Factor                                                                                                                  |\n",
            "|---:|:-----------------------|-----------------------:|-------------------:|:---------------------------------------------------------------------------------------------------------------------|:--------------------------------------------------------------------------------|:-------------------------|:----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-----------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------|------------------------:|--------------------------------------:|:---------------------------------------------------------------------------------------------------------------------------------------|\n",
            "|  0 | Raghu                  |                    1.5 |                  3 | High                                                                                                                 | S                                                                               | Dancing                  | Deep learning                                                                                                                                                                                                               | Fast and furious                                                                                                             | GM                                                                   |                       1 |                                   5   | ['High']                                                                                                                               |\n",
            "|  1 | Ashvadharani           |                    4   |                  4 | Great extent                                                                                                         | Yes, artworks                                                                   | Art                      | No                                                                                                                                                                                                                          | Myself                                                                                                                       | In everyday life                                                     |                       5 |                                   5   | ['Great', 'extent']                                                                                                                    |\n",
            "|  2 | Sangameshwaran S       |                    3.5 |                  4 | Great extent                                                                                                         | No                                                                              | Art                      | No                                                                                                                                                                                                                          | Anywhere                                                                                                                     | No idea                                                              |                       3 |                                   5   | ['Great', 'extent']                                                                                                                    |\n",
            "|  3 | My name is Gowtham     |                    3.5 |                  4 | On a scale of 1 to 10, 9                                                                                             | I enjoy reading books                                                           | Personalizing Home       | Haven't any recently                                                                                                                                                                                                        | Cinema                                                                                                                       | Job                                                                  |                       1 |                                   5   | ['scale', '1', '10', ',', '9']                                                                                                         |\n",
            "|  4 | akshaya priya s        |                    5   |                  4 | On a scale of 1- 10, 9                                                                                               | I enjoy baking                                                                  | Personalising home       | No                                                                                                                                                                                                                          | Problem solving efforts                                                                                                      | Job                                                                  |                       1 |                                   5   | ['scale', '1-', '10', ',', '9']                                                                                                        |\n",
            "|  5 | A sujit kumar          |                    5   |                  4 | Always stepping out and taking the risk... understanding and calculating the worst case scenario and moving forward. | Yes...I do wall painting and acrylic and presently... explorimg in digital art  | Art, regressive writing. | During internship...I was able to solve problem for the organisation....I was able to reduce the manual effort and automate the process through RPA. Development of the solution had to deal with some out of box thinking. | Reading lot books help me a lot to think...one such book that had impact on my decision making process was \"the art of war\". | Consulting and music                                                 |                       1 |                                   0   | ['Always', 'stepping', 'taking', 'risk', '...', 'understanding', 'calculating', 'worst', 'case', 'scenario', 'moving', 'forward', '.'] |\n",
            "|  6 | Pradeep R P            |                    3.5 |                  3 | No                                                                                                                   | No                                                                              | Writing                  | No                                                                                                                                                                                                                          | No                                                                                                                           | No                                                                   |                       1 |                                   2.5 | []                                                                                                                                     |\n",
            "|  7 | STEVE                  |                    2.5 |                  3 | 5/10                                                                                                                 | Writing Letters                                                                 | Writings                 | Project Management Examination                                                                                                                                                                                              | ChatGPT                                                                                                                      | IDK Bro                                                              |                       1 |                                   1   | ['5/10']                                                                                                                               |\n",
            "|  8 | Keerthana              |                    3   |                  3 | 0.75                                                                                                                 | Nope                                                                            | Writing (anime)          | Assessments and assignments. Writing about games and anime                                                                                                                                                                  | ChatGPT and Bard                                                                                                             | No idea                                                              |                       2 |                                   0   | []                                                                                                                                     |\n",
            "|  9 | Lokesh                 |                    3.5 |                  3 | To such extent that will help me acquire new knowledge                                                               | No                                                                              | Art, chess               | Activities in obt are overcame by team work                                                                                                                                                                                 | Internet                                                                                                                     | As of now no such goals                                              |                       5 |                                   5   | ['extent', 'help', 'acquire', 'new', 'knowledge']                                                                                      |\n",
            "| 10 | Sushmidha              |                    4   |                  3 | I love to take some risk in life to make it more interesting I keep doing it often                                   | I do some art works and painting to make my self Engaged and do creative things | Art work and painting    | Obt dragon Making                                                                                                                                                                                                           | Social media                                                                                                                 | I love to explore with more art works and work on some workshops     |                       1 |                                   5   | ['love', 'take', 'risk', 'life', 'make', 'interesting', 'keep', 'often']                                                               |\n",
            "| 11 | Kandha kamatchi S      |                    3   |                  3 | If the situation demands I will try to take risks                                                                    | No                                                                              | -                        | Not anything recently                                                                                                                                                                                                       | From friends and family                                                                                                      | May be in my workplace                                               |                       2 |                                   5   | ['situation', 'demands', 'try', 'take', 'risks']                                                                                       |\n",
            "| 12 | Anusha                 |                    3.5 |                  3 | Great extent                                                                                                         | No                                                                              | None                     | No                                                                                                                                                                                                                          | Movies                                                                                                                       | None                                                                 |                       5 |                                   5   | ['Great', 'extent']                                                                                                                    |\n",
            "| 13 | Yuvaraj R              |                    3.5 |                  3 | To some extent                                                                                                       | Yes. Yes.                                                                       | Art                      | No                                                                                                                                                                                                                          | Chat GPT                                                                                                                     | No specific goals yet                                                |                       5 |                                   5   | ['extent']                                                                                                                             |\n",
            "| 14 | Ramesh Kumar B         |                    4   |                  3 | I'm quite comfortable in taking risks                                                                                | Nope                                                                            | Writing                  | No                                                                                                                                                                                                                          | Life lessons                                                                                                                 | No creative goals as of now                                          |                       2 |                                   5   | [\"'m\", 'quite', 'comfortable', 'taking', 'risks']                                                                                      |\n",
            "| 15 | Dineshkumar R A        |                    3.5 |                  3 | Within my limits                                                                                                     | No                                                                              | Cricket analysis         | Wanted to identify a way to reduce pressure during fowlerd follow up. Having 1st stride of follow up to close to line of action of ball can minimize force acting on body which in turn may avoid injury.                   | Anime                                                                                                                        | Nothing. Going with flow.                                            |                       2 |                                   5   | ['Within', 'limits']                                                                                                                   |\n",
            "| 16 | Sudharsan.M.H          |                    2   |                  3 | I don't take Rizzzk                                                                                                  | Yes                                                                             | U-V METHOD               | I can't                                                                                                                                                                                                                     | ChatGPT                                                                                                                      | Owning a coffee shop in Kashmir                                      |                       1 |                                   2.5 | [\"n't\", 'take', 'Rizzzk']                                                                                                              |\n",
            "| 17 | Devi priya P           |                    3.5 |                  3 | To the extent that it doesn't involve high risk                                                                      | Yes. Writing stories                                                            | Writing                  | No. I don't recall                                                                                                                                                                                                          | Books and Online content                                                                                                     | To write a fictional book                                            |                       3 |                                   5   | ['extent', \"n't\", 'involve', 'high', 'risk']                                                                                           |\n",
            "| 18 | Afshaan                |                    4   |                  4 | I like taking up new tasks                                                                                           | Yes- Numismatics                                                                | Music                    | Building a city activity - Overcame it through utilising team ideas                                                                                                                                                         | The thought to perform better than others is my inspiration                                                                  | In whatever job and work that I would be doing                       |                       2 |                                   5   | ['like', 'taking', 'new', 'tasks']                                                                                                     |\n",
            "| 19 | Leo Das                |                    5   |                  5 | You know my identity - You are dead                                                                                  | Dancing to karu karu karupaayi                                                  | WILD BEANS               | Yes.. Telling an emotional creative story to Sathya                                                                                                                                                                         |                                                                                                                              | Join LCU                                                             |                       1 |                                   5   | ['know', 'identity', '-', 'dead']                                                                                                      |\n",
            "| 20 | Dharani                |                    3.5 |                  3 | To a moderate level                                                                                                  | Art work                                                                        | Art work                 | No                                                                                                                                                                                                                          | From people who have successfully implemented creative solutions                                                             | At workplace- in generating and implementation of creative solutions |                       1 |                                   5   | ['moderate', 'level']                                                                                                                  |\n",
            "| 21 | Sharthkumar Sabarish K |                    3.5 |                  3 | I am quite comfortable with taking risks because it motivates me to do a particular activity even more than usual    | Been writing a book for quite a while now                                       | Writing                  | Nope                                                                                                                                                                                                                        | Novels or Web Series                                                                                                         | Not willing to share                                                 |                       5 |                                   5   | ['quite', 'comfortable', 'taking', 'risks', 'motivates', 'particular', 'activity', 'even', 'usual']                                    |\n",
            "| 22 | Vijay Rajasekaran      |                    3.5 |                  3 | Risk Taking                                                                                                          | No                                                                              | Sports                   | We were given a task to come up with creative ways to raise funding for a company. For this I suggested some ideas such as organising competitions such as marathons and charge fee for participation                       | AI tools                                                                                                                     | At place of employment                                               |                       2 |                                   5   | ['Risk', 'Taking']                                                                                                                     |\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Mapping function to assign values\n",
        "def map_Risk_Factor(row):\n",
        "    challenge_text = str(row['Risk Factor']).lower()\n",
        "\n",
        "    if any(keyword in challenge_text for keyword in ['Great', 'High', 'Always', 'activities', 'team', 'identify', 'funding']):\n",
        "        return 5\n",
        "    elif any(keyword in challenge_text for keyword in ['9', '0.75','such','some','demands','quite','limits','new']):\n",
        "        return 4\n",
        "    elif any(keyword in challenge_text for keyword in ['', 'any', 'not','taking','moderate']):\n",
        "        return 2.5\n",
        "    else:\n",
        "        return 0  # Adjust this based on your specific requirements\n",
        "\n",
        "# Apply the mapping function to the 'Risk Factor' column\n",
        "df['Cleaned Risk Factor'] = df.apply(map_Risk_Factor, axis=1)\n",
        "print(df['Cleaned Risk Factor'])\n"
      ],
      "metadata": {
        "id": "AAWkEQgB_3D0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c3e4aea3-0727-4b64-a988-96e7dac525d7"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0     2.5\n",
            "1     2.5\n",
            "2     2.5\n",
            "3     4.0\n",
            "4     4.0\n",
            "5     2.5\n",
            "6     2.5\n",
            "7     2.5\n",
            "8     4.0\n",
            "9     4.0\n",
            "10    4.0\n",
            "11    4.0\n",
            "12    2.5\n",
            "13    4.0\n",
            "14    4.0\n",
            "15    4.0\n",
            "16    2.5\n",
            "17    2.5\n",
            "18    4.0\n",
            "19    2.5\n",
            "20    2.5\n",
            "21    4.0\n",
            "22    2.5\n",
            "Name: Cleaned Risk Factor, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['Cleaned Risk Factor'])\n"
      ],
      "metadata": {
        "id": "Qd9HFtPe3OCb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6054e0a8-8f6a-44de-b286-14f6d435d5c7"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0     2.5\n",
            "1     2.5\n",
            "2     2.5\n",
            "3     4.0\n",
            "4     4.0\n",
            "5     2.5\n",
            "6     2.5\n",
            "7     2.5\n",
            "8     4.0\n",
            "9     4.0\n",
            "10    4.0\n",
            "11    4.0\n",
            "12    2.5\n",
            "13    4.0\n",
            "14    4.0\n",
            "15    4.0\n",
            "16    2.5\n",
            "17    2.5\n",
            "18    4.0\n",
            "19    2.5\n",
            "20    2.5\n",
            "21    4.0\n",
            "22    2.5\n",
            "Name: Cleaned Risk Factor, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop the 'Risk Factor' column\n",
        "df.drop('Risk Factor', axis=1, inplace=True)\n",
        "\n",
        "# Display the DataFrame after dropping the column\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "gYNIePsD0mDB",
        "outputId": "f249c8f3-e61b-47cb-b8a4-3a7cd690cd95"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                      Name  Percieved creativity  Innovative Ideas  \\\n",
              "0                   Raghu                    1.5                 3   \n",
              "1            Ashvadharani                    4.0                 4   \n",
              "2         Sangameshwaran S                   3.5                 4   \n",
              "3       My name is Gowtham                   3.5                 4   \n",
              "4          akshaya priya s                   5.0                 4   \n",
              "5            A sujit kumar                   5.0                 4   \n",
              "6             Pradeep R P                    3.5                 3   \n",
              "7                    STEVE                   2.5                 3   \n",
              "8                Keerthana                   3.0                 3   \n",
              "9                   Lokesh                   3.5                 3   \n",
              "10              Sushmidha                    4.0                 3   \n",
              "11      Kandha kamatchi S                    3.0                 3   \n",
              "12                  Anusha                   3.5                 3   \n",
              "13               Yuvaraj R                   3.5                 3   \n",
              "14         Ramesh Kumar B                    4.0                 3   \n",
              "15         Dineshkumar R A                   3.5                 3   \n",
              "16           Sudharsan.M.H                   2.0                 3   \n",
              "17            Devi priya P                   3.5                 3   \n",
              "18                Afshaan                    4.0                 4   \n",
              "19                 Leo Das                   5.0                 5   \n",
              "20                 Dharani                   3.5                 3   \n",
              "21  Sharthkumar Sabarish K                   3.5                 3   \n",
              "22      Vijay Rajasekaran                    3.5                 3   \n",
              "\n",
              "                                     Creative Hobbies  \\\n",
              "0                                                   S   \n",
              "1                                      Yes, artworks    \n",
              "2                                                  No   \n",
              "3                               I enjoy reading books   \n",
              "4                                      I enjoy baking   \n",
              "5   Yes...I do wall painting and acrylic and prese...   \n",
              "6                                                  No   \n",
              "7                                     Writing Letters   \n",
              "8                                               Nope    \n",
              "9                                                  No   \n",
              "10  I do some art works and painting to make my se...   \n",
              "11                                                 No   \n",
              "12                                                 No   \n",
              "13                                         Yes. Yes.    \n",
              "14                                               Nope   \n",
              "15                                                 No   \n",
              "16                                                Yes   \n",
              "17                               Yes. Writing stories   \n",
              "18                                   Yes- Numismatics   \n",
              "19                     Dancing to karu karu karupaayi   \n",
              "20                                           Art work   \n",
              "21          Been writing a book for quite a while now   \n",
              "22                                                 No   \n",
              "\n",
              "          Express Creativity  \\\n",
              "0                    Dancing   \n",
              "1                       Art    \n",
              "2                        Art   \n",
              "3         Personalizing Home   \n",
              "4        Personalising home    \n",
              "5   Art, regressive writing.   \n",
              "6                   Writing    \n",
              "7                   Writings   \n",
              "8            Writing (anime)   \n",
              "9                 Art, chess   \n",
              "10    Art work and painting    \n",
              "11                         -   \n",
              "12                      None   \n",
              "13                       Art   \n",
              "14                   Writing   \n",
              "15          Cricket analysis   \n",
              "16                U-V METHOD   \n",
              "17                  Writing    \n",
              "18                     Music   \n",
              "19               WILD BEANS    \n",
              "20                  Art work   \n",
              "21                   Writing   \n",
              "22                    Sports   \n",
              "\n",
              "                                   Creative Challenge  \\\n",
              "0                                       Deep learning   \n",
              "1                                                 No    \n",
              "2                                                  No   \n",
              "3                               Haven't any recently    \n",
              "4                                                  No   \n",
              "5   During internship...I was able to solve proble...   \n",
              "6                                                  No   \n",
              "7                     Project Management Examination    \n",
              "8   Assessments and assignments. Writing about gam...   \n",
              "9         Activities in obt are overcame by team work   \n",
              "10                                 Obt dragon Making    \n",
              "11                             Not anything recently    \n",
              "12                                                 No   \n",
              "13                                                 No   \n",
              "14                                                 No   \n",
              "15  Wanted to identify a way to reduce pressure du...   \n",
              "16                                            I can't   \n",
              "17                                 No. I don't recall   \n",
              "18  Building a city activity - Overcame it through...   \n",
              "19  Yes.. Telling an emotional creative story to S...   \n",
              "20                                                 No   \n",
              "21                                               Nope   \n",
              "22  We were given a task to come up with creative ...   \n",
              "\n",
              "                                  Inspired Creativity  \\\n",
              "0                                    Fast and furious   \n",
              "1                                             Myself    \n",
              "2                                           Anywhere    \n",
              "3                                             Cinema    \n",
              "4                             Problem solving efforts   \n",
              "5   Reading lot books help me a lot to think...one...   \n",
              "6                                                  No   \n",
              "7                                             ChatGPT   \n",
              "8                                    ChatGPT and Bard   \n",
              "9                                           Internet    \n",
              "10                                      Social media    \n",
              "11                           From friends and family    \n",
              "12                                             Movies   \n",
              "13                                           Chat GPT   \n",
              "14                                       Life lessons   \n",
              "15                                              Anime   \n",
              "16                                            ChatGPT   \n",
              "17                          Books and Online content    \n",
              "18  The thought to perform better than others is m...   \n",
              "19                                                      \n",
              "20  From people who have successfully implemented ...   \n",
              "21                               Novels or Web Series   \n",
              "22                                           AI tools   \n",
              "\n",
              "                                                Goals  Problem Solving Marks  \\\n",
              "0                                                  GM                      1   \n",
              "1                                   In everyday life                       5   \n",
              "2                                             No idea                      3   \n",
              "3                                                 Job                      1   \n",
              "4                                                 Job                      1   \n",
              "5                                Consulting and music                      1   \n",
              "6                                                  No                      1   \n",
              "7                                             IDK Bro                      1   \n",
              "8                                             No idea                      2   \n",
              "9                             As of now no such goals                      5   \n",
              "10  I love to explore with more art works and work...                      1   \n",
              "11                             May be in my workplace                      2   \n",
              "12                                               None                      5   \n",
              "13                              No specific goals yet                      5   \n",
              "14                        No creative goals as of now                      2   \n",
              "15                         Nothing. Going with flow.                       2   \n",
              "16                   Owning a coffee shop in Kashmir                       1   \n",
              "17                         To write a fictional book                       3   \n",
              "18     In whatever job and work that I would be doing                      2   \n",
              "19                                          Join LCU                       1   \n",
              "20  At workplace- in generating and implementation...                      1   \n",
              "21                               Not willing to share                      5   \n",
              "22                            At place of employment                       2   \n",
              "\n",
              "    Cleaned Different Perspective Marks  \\\n",
              "0                                   5.0   \n",
              "1                                   5.0   \n",
              "2                                   5.0   \n",
              "3                                   5.0   \n",
              "4                                   5.0   \n",
              "5                                   0.0   \n",
              "6                                   2.5   \n",
              "7                                   1.0   \n",
              "8                                   0.0   \n",
              "9                                   5.0   \n",
              "10                                  5.0   \n",
              "11                                  5.0   \n",
              "12                                  5.0   \n",
              "13                                  5.0   \n",
              "14                                  5.0   \n",
              "15                                  5.0   \n",
              "16                                  2.5   \n",
              "17                                  5.0   \n",
              "18                                  5.0   \n",
              "19                                  5.0   \n",
              "20                                  5.0   \n",
              "21                                  5.0   \n",
              "22                                  5.0   \n",
              "\n",
              "                                Tokenized_Risk_Factor  Cleaned Risk Factor  \n",
              "0                                              [High]                  2.5  \n",
              "1                                     [Great, extent]                  2.5  \n",
              "2                                     [Great, extent]                  2.5  \n",
              "3                                [scale, 1, 10, ,, 9]                  4.0  \n",
              "4                               [scale, 1-, 10, ,, 9]                  4.0  \n",
              "5   [Always, stepping, taking, risk, ..., understa...                  2.5  \n",
              "6                                                  []                  2.5  \n",
              "7                                              [5/10]                  2.5  \n",
              "8                                                  []                  4.0  \n",
              "9             [extent, help, acquire, new, knowledge]                  4.0  \n",
              "10  [love, take, risk, life, make, interesting, ke...                  4.0  \n",
              "11             [situation, demands, try, take, risks]                  4.0  \n",
              "12                                    [Great, extent]                  2.5  \n",
              "13                                           [extent]                  4.0  \n",
              "14            ['m, quite, comfortable, taking, risks]                  4.0  \n",
              "15                                   [Within, limits]                  4.0  \n",
              "16                                [n't, take, Rizzzk]                  2.5  \n",
              "17                 [extent, n't, involve, high, risk]                  2.5  \n",
              "18                         [like, taking, new, tasks]                  4.0  \n",
              "19                          [know, identity, -, dead]                  2.5  \n",
              "20                                  [moderate, level]                  2.5  \n",
              "21  [quite, comfortable, taking, risks, motivates,...                  4.0  \n",
              "22                                     [Risk, Taking]                  2.5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d0b01266-5654-45f1-a3d3-e8a458e7a4ac\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Name</th>\n",
              "      <th>Percieved creativity</th>\n",
              "      <th>Innovative Ideas</th>\n",
              "      <th>Creative Hobbies</th>\n",
              "      <th>Express Creativity</th>\n",
              "      <th>Creative Challenge</th>\n",
              "      <th>Inspired Creativity</th>\n",
              "      <th>Goals</th>\n",
              "      <th>Problem Solving Marks</th>\n",
              "      <th>Cleaned Different Perspective Marks</th>\n",
              "      <th>Tokenized_Risk_Factor</th>\n",
              "      <th>Cleaned Risk Factor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Raghu</td>\n",
              "      <td>1.5</td>\n",
              "      <td>3</td>\n",
              "      <td>S</td>\n",
              "      <td>Dancing</td>\n",
              "      <td>Deep learning</td>\n",
              "      <td>Fast and furious</td>\n",
              "      <td>GM</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[High]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Ashvadharani</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4</td>\n",
              "      <td>Yes, artworks</td>\n",
              "      <td>Art</td>\n",
              "      <td>No</td>\n",
              "      <td>Myself</td>\n",
              "      <td>In everyday life</td>\n",
              "      <td>5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[Great, extent]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Sangameshwaran S</td>\n",
              "      <td>3.5</td>\n",
              "      <td>4</td>\n",
              "      <td>No</td>\n",
              "      <td>Art</td>\n",
              "      <td>No</td>\n",
              "      <td>Anywhere</td>\n",
              "      <td>No idea</td>\n",
              "      <td>3</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[Great, extent]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>My name is Gowtham</td>\n",
              "      <td>3.5</td>\n",
              "      <td>4</td>\n",
              "      <td>I enjoy reading books</td>\n",
              "      <td>Personalizing Home</td>\n",
              "      <td>Haven't any recently</td>\n",
              "      <td>Cinema</td>\n",
              "      <td>Job</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[scale, 1, 10, ,, 9]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>akshaya priya s</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4</td>\n",
              "      <td>I enjoy baking</td>\n",
              "      <td>Personalising home</td>\n",
              "      <td>No</td>\n",
              "      <td>Problem solving efforts</td>\n",
              "      <td>Job</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[scale, 1-, 10, ,, 9]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>A sujit kumar</td>\n",
              "      <td>5.0</td>\n",
              "      <td>4</td>\n",
              "      <td>Yes...I do wall painting and acrylic and prese...</td>\n",
              "      <td>Art, regressive writing.</td>\n",
              "      <td>During internship...I was able to solve proble...</td>\n",
              "      <td>Reading lot books help me a lot to think...one...</td>\n",
              "      <td>Consulting and music</td>\n",
              "      <td>1</td>\n",
              "      <td>0.0</td>\n",
              "      <td>[Always, stepping, taking, risk, ..., understa...</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Pradeep R P</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>No</td>\n",
              "      <td>Writing</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>No</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>[]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>STEVE</td>\n",
              "      <td>2.5</td>\n",
              "      <td>3</td>\n",
              "      <td>Writing Letters</td>\n",
              "      <td>Writings</td>\n",
              "      <td>Project Management Examination</td>\n",
              "      <td>ChatGPT</td>\n",
              "      <td>IDK Bro</td>\n",
              "      <td>1</td>\n",
              "      <td>1.0</td>\n",
              "      <td>[5/10]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Keerthana</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3</td>\n",
              "      <td>Nope</td>\n",
              "      <td>Writing (anime)</td>\n",
              "      <td>Assessments and assignments. Writing about gam...</td>\n",
              "      <td>ChatGPT and Bard</td>\n",
              "      <td>No idea</td>\n",
              "      <td>2</td>\n",
              "      <td>0.0</td>\n",
              "      <td>[]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Lokesh</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>No</td>\n",
              "      <td>Art, chess</td>\n",
              "      <td>Activities in obt are overcame by team work</td>\n",
              "      <td>Internet</td>\n",
              "      <td>As of now no such goals</td>\n",
              "      <td>5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[extent, help, acquire, new, knowledge]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Sushmidha</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3</td>\n",
              "      <td>I do some art works and painting to make my se...</td>\n",
              "      <td>Art work and painting</td>\n",
              "      <td>Obt dragon Making</td>\n",
              "      <td>Social media</td>\n",
              "      <td>I love to explore with more art works and work...</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[love, take, risk, life, make, interesting, ke...</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Kandha kamatchi S</td>\n",
              "      <td>3.0</td>\n",
              "      <td>3</td>\n",
              "      <td>No</td>\n",
              "      <td>-</td>\n",
              "      <td>Not anything recently</td>\n",
              "      <td>From friends and family</td>\n",
              "      <td>May be in my workplace</td>\n",
              "      <td>2</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[situation, demands, try, take, risks]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Anusha</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>No</td>\n",
              "      <td>None</td>\n",
              "      <td>No</td>\n",
              "      <td>Movies</td>\n",
              "      <td>None</td>\n",
              "      <td>5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[Great, extent]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Yuvaraj R</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>Yes. Yes.</td>\n",
              "      <td>Art</td>\n",
              "      <td>No</td>\n",
              "      <td>Chat GPT</td>\n",
              "      <td>No specific goals yet</td>\n",
              "      <td>5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[extent]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Ramesh Kumar B</td>\n",
              "      <td>4.0</td>\n",
              "      <td>3</td>\n",
              "      <td>Nope</td>\n",
              "      <td>Writing</td>\n",
              "      <td>No</td>\n",
              "      <td>Life lessons</td>\n",
              "      <td>No creative goals as of now</td>\n",
              "      <td>2</td>\n",
              "      <td>5.0</td>\n",
              "      <td>['m, quite, comfortable, taking, risks]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Dineshkumar R A</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>No</td>\n",
              "      <td>Cricket analysis</td>\n",
              "      <td>Wanted to identify a way to reduce pressure du...</td>\n",
              "      <td>Anime</td>\n",
              "      <td>Nothing. Going with flow.</td>\n",
              "      <td>2</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[Within, limits]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Sudharsan.M.H</td>\n",
              "      <td>2.0</td>\n",
              "      <td>3</td>\n",
              "      <td>Yes</td>\n",
              "      <td>U-V METHOD</td>\n",
              "      <td>I can't</td>\n",
              "      <td>ChatGPT</td>\n",
              "      <td>Owning a coffee shop in Kashmir</td>\n",
              "      <td>1</td>\n",
              "      <td>2.5</td>\n",
              "      <td>[n't, take, Rizzzk]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Devi priya P</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>Yes. Writing stories</td>\n",
              "      <td>Writing</td>\n",
              "      <td>No. I don't recall</td>\n",
              "      <td>Books and Online content</td>\n",
              "      <td>To write a fictional book</td>\n",
              "      <td>3</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[extent, n't, involve, high, risk]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Afshaan</td>\n",
              "      <td>4.0</td>\n",
              "      <td>4</td>\n",
              "      <td>Yes- Numismatics</td>\n",
              "      <td>Music</td>\n",
              "      <td>Building a city activity - Overcame it through...</td>\n",
              "      <td>The thought to perform better than others is m...</td>\n",
              "      <td>In whatever job and work that I would be doing</td>\n",
              "      <td>2</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[like, taking, new, tasks]</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Leo Das</td>\n",
              "      <td>5.0</td>\n",
              "      <td>5</td>\n",
              "      <td>Dancing to karu karu karupaayi</td>\n",
              "      <td>WILD BEANS</td>\n",
              "      <td>Yes.. Telling an emotional creative story to S...</td>\n",
              "      <td></td>\n",
              "      <td>Join LCU</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[know, identity, -, dead]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Dharani</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>Art work</td>\n",
              "      <td>Art work</td>\n",
              "      <td>No</td>\n",
              "      <td>From people who have successfully implemented ...</td>\n",
              "      <td>At workplace- in generating and implementation...</td>\n",
              "      <td>1</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[moderate, level]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Sharthkumar Sabarish K</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>Been writing a book for quite a while now</td>\n",
              "      <td>Writing</td>\n",
              "      <td>Nope</td>\n",
              "      <td>Novels or Web Series</td>\n",
              "      <td>Not willing to share</td>\n",
              "      <td>5</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[quite, comfortable, taking, risks, motivates,...</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Vijay Rajasekaran</td>\n",
              "      <td>3.5</td>\n",
              "      <td>3</td>\n",
              "      <td>No</td>\n",
              "      <td>Sports</td>\n",
              "      <td>We were given a task to come up with creative ...</td>\n",
              "      <td>AI tools</td>\n",
              "      <td>At place of employment</td>\n",
              "      <td>2</td>\n",
              "      <td>5.0</td>\n",
              "      <td>[Risk, Taking]</td>\n",
              "      <td>2.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0b01266-5654-45f1-a3d3-e8a458e7a4ac')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d0b01266-5654-45f1-a3d3-e8a458e7a4ac button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d0b01266-5654-45f1-a3d3-e8a458e7a4ac');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-904c0af5-1a4d-4470-8595-0be63fd8d74b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-904c0af5-1a4d-4470-8595-0be63fd8d74b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-904c0af5-1a4d-4470-8595-0be63fd8d74b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Mapping function to assign values\n",
        "def map_creative_hobbies(row):\n",
        "    hobbies = str(row['Creative Hobbies']).lower()\n",
        "\n",
        "    if any(keyword in hobbies for keyword in ['yes', 'artworks', 'books', 'baking', 'writing', 'painting','art', 's']):\n",
        "        return 'Yes'\n",
        "    elif any(keyword in hobbies for keyword in ['no', 'nope']):\n",
        "        return 'No'\n",
        "    else:\n",
        "        return 'No'\n",
        "\n",
        "# Apply the mapping function to create the 'Modified Creative Hobbies' column\n",
        "df['Modified Creative Hobbies'] = df.apply(map_creative_hobbies, axis=1)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "ioYXoMvWKcMR"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Mapping function to assign marks\n",
        "def map_creative_hobbies_to_marks(modified_hobbies):\n",
        "    if modified_hobbies == 'Yes':\n",
        "        return 5\n",
        "    elif modified_hobbies == 'No':\n",
        "        return 0\n",
        "    else:\n",
        "        return 'Unrecognized'\n",
        "\n",
        "# Apply the mapping function to create the 'Creative Hobbies Marks' column\n",
        "df['Creative Hobbies Marks'] = df['Modified Creative Hobbies'].apply(map_creative_hobbies_to_marks)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "J6dfaKz6QWci"
      },
      "execution_count": 64,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Drop the original 'Different perspective' and 'Cleaned Different perspective' columns\n",
        "df.drop(columns=['Creative Hobbies', 'Modified Creative Hobbies', 'Express Creativity','Tokenized_Risk_Factor','Inspired Creativity','Goals'], inplace=True)"
      ],
      "metadata": {
        "id": "tXw28buXQoDY"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Mapping function to assign values\n",
        "def map_Creative_Challenge(row):\n",
        "    challenge_text = str(row['Creative Challenge']).lower()\n",
        "\n",
        "    if any(keyword in challenge_text for keyword in ['deep learning', 'intership', 'assessments', 'activities', 'team', 'identify', 'funding']):\n",
        "        return 'Yes'\n",
        "    elif any(keyword in challenge_text for keyword in ['project', 'dragon']):\n",
        "        return 'Maybe'\n",
        "    elif any(keyword in challenge_text for keyword in ['no', 'any', 'not']):\n",
        "        return 'No'\n",
        "    else:\n",
        "        return 'No'  # Adjust this based on your specific requirements\n",
        "\n",
        "# Apply the mapping function to create the ' Creative Challenge' column\n",
        "df['Creative Challenge'] = df.apply(map_Creative_Challenge, axis=1)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "etAuirfFSO6_"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Mapping function to assign marks\n",
        "def map_Creative_Challenge_to_marks(row):\n",
        "    challenge_text = str(row['Creative Challenge']).lower()\n",
        "\n",
        "    if 'yes' in challenge_text:\n",
        "        return 5.0\n",
        "    elif 'maybe' in challenge_text:\n",
        "        return 2.5\n",
        "    elif 'no' in challenge_text:\n",
        "        return 0.0\n",
        "\n",
        "# Apply the mapping function to create the 'Creative Challenge Marks' column\n",
        "df['Creative Challenge'] = df.apply(map_Creative_Challenge_to_marks, axis=1)\n"
      ],
      "metadata": {
        "id": "eJ95UJuXWo6P"
      },
      "execution_count": 67,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.rename(columns={'Problem Solving Marks': 'Problem Solving','Cleaned Different Perspective Marks':'Different Perspective',\n",
        "                   'Cleaned Risk Factor':'Risk Factor', 'Creative Hobbies Marks':'Creative Hobbies'}, inplace=True)"
      ],
      "metadata": {
        "id": "WTIV7QWKs-Mv"
      },
      "execution_count": 68,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "print(df.to_markdown())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "H0B0lW8wMbZg",
        "outputId": "d0fdac0b-0161-474f-ca2f-ff6225a9fa3b"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "|    | Name                   |   Percieved creativity |   Innovative Ideas |   Creative Challenge |   Problem Solving |   Different Perspective |   Risk Factor |   Creative Hobbies |\n",
            "|---:|:-----------------------|-----------------------:|-------------------:|---------------------:|------------------:|------------------------:|--------------:|-------------------:|\n",
            "|  0 | Raghu                  |                    1.5 |                  3 |                  5   |                 1 |                     5   |           2.5 |                  5 |\n",
            "|  1 | Ashvadharani           |                    4   |                  4 |                  0   |                 5 |                     5   |           2.5 |                  5 |\n",
            "|  2 | Sangameshwaran S       |                    3.5 |                  4 |                  0   |                 3 |                     5   |           2.5 |                  0 |\n",
            "|  3 | My name is Gowtham     |                    3.5 |                  4 |                  0   |                 1 |                     5   |           4   |                  5 |\n",
            "|  4 | akshaya priya s        |                    5   |                  4 |                  0   |                 1 |                     5   |           4   |                  5 |\n",
            "|  5 | A sujit kumar          |                    5   |                  4 |                  0   |                 1 |                     0   |           2.5 |                  5 |\n",
            "|  6 | Pradeep R P            |                    3.5 |                  3 |                  0   |                 1 |                     2.5 |           2.5 |                  0 |\n",
            "|  7 | STEVE                  |                    2.5 |                  3 |                  2.5 |                 1 |                     1   |           2.5 |                  5 |\n",
            "|  8 | Keerthana              |                    3   |                  3 |                  5   |                 2 |                     0   |           4   |                  0 |\n",
            "|  9 | Lokesh                 |                    3.5 |                  3 |                  5   |                 5 |                     5   |           4   |                  0 |\n",
            "| 10 | Sushmidha              |                    4   |                  3 |                  2.5 |                 1 |                     5   |           4   |                  5 |\n",
            "| 11 | Kandha kamatchi S      |                    3   |                  3 |                  0   |                 2 |                     5   |           4   |                  0 |\n",
            "| 12 | Anusha                 |                    3.5 |                  3 |                  0   |                 5 |                     5   |           2.5 |                  0 |\n",
            "| 13 | Yuvaraj R              |                    3.5 |                  3 |                  0   |                 5 |                     5   |           4   |                  5 |\n",
            "| 14 | Ramesh Kumar B         |                    4   |                  3 |                  0   |                 2 |                     5   |           4   |                  0 |\n",
            "| 15 | Dineshkumar R A        |                    3.5 |                  3 |                  5   |                 2 |                     5   |           4   |                  0 |\n",
            "| 16 | Sudharsan.M.H          |                    2   |                  3 |                  0   |                 1 |                     2.5 |           2.5 |                  5 |\n",
            "| 17 | Devi priya P           |                    3.5 |                  3 |                  0   |                 3 |                     5   |           2.5 |                  5 |\n",
            "| 18 | Afshaan                |                    4   |                  4 |                  5   |                 2 |                     5   |           4   |                  5 |\n",
            "| 19 | Leo Das                |                    5   |                  5 |                  0   |                 1 |                     5   |           2.5 |                  0 |\n",
            "| 20 | Dharani                |                    3.5 |                  3 |                  0   |                 1 |                     5   |           2.5 |                  5 |\n",
            "| 21 | Sharthkumar Sabarish K |                    3.5 |                  3 |                  0   |                 5 |                     5   |           4   |                  5 |\n",
            "| 22 | Vijay Rajasekaran      |                    3.5 |                  3 |                  5   |                 2 |                     5   |           2.5 |                  0 |\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Descriptive Statistics\n",
        "basic_statistics = df.describe()\n",
        "print(basic_statistics)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hk-BWq4mcLVu",
        "outputId": "f67cbefb-c836-4f8a-dde2-8d1bdb61d25a"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       Percieved creativity  Innovative Ideas  Creative Challenge  \\\n",
            "count             23.000000         23.000000           23.000000   \n",
            "mean               3.543478          3.347826            1.521739   \n",
            "std                0.838194          0.572768            2.228321   \n",
            "min                1.500000          3.000000            0.000000   \n",
            "25%                3.500000          3.000000            0.000000   \n",
            "50%                3.500000          3.000000            0.000000   \n",
            "75%                4.000000          4.000000            3.750000   \n",
            "max                5.000000          5.000000            5.000000   \n",
            "\n",
            "       Problem Solving  Different Perspective  Risk Factor  Creative Hobbies  \n",
            "count        23.000000              23.000000    23.000000         23.000000  \n",
            "mean          2.304348               4.173913     3.217391          2.826087  \n",
            "std           1.579263               1.689598     0.766131          2.534349  \n",
            "min           1.000000               0.000000     2.500000          0.000000  \n",
            "25%           1.000000               5.000000     2.500000          0.000000  \n",
            "50%           2.000000               5.000000     2.500000          5.000000  \n",
            "75%           3.000000               5.000000     4.000000          5.000000  \n",
            "max           5.000000               5.000000     4.000000          5.000000  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Correlation Analysis\n",
        "correlation_matrix = df.corr()\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title('Correlation Matrix Heatmap')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 831
        },
        "id": "kGTr0XOicNVZ",
        "outputId": "98371b5a-3241-43d0-d250-2a3ab6bdc7cf"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Distribution of Marks\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.histplot(df['Problem Solving'], bins=20, kde=True, color='blue', label='Problem Solving ')\n",
        "sns.histplot(df['Different Perspective'], bins=20, kde=True, color='green', label='Different Perspective')\n",
        "sns.histplot(df['Risk Factor'], bins=20, kde=True, color='orange', label='Risk Factor ')\n",
        "sns.histplot(df['Creative Hobbies'], bins=20, kde=True, color='red', label='Creative Hobbies ')\n",
        "plt.title('Distribution of ')\n",
        "plt.xlabel('Marks')\n",
        "plt.ylabel('Frequency')\n",
        "plt.legend()\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "Jj39jezccXCF",
        "outputId": "cac042a7-a1db-4970-bc31-07a0ee64e8e6"
      },
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Comparison of Marks\n",
        "average_marks = df[['Problem Solving', 'Different Perspective', 'Risk Factor', 'Creative Hobbies']].mean()\n",
        "print('Average Marks:\\n', average_marks)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MgFKacJWcgZ8",
        "outputId": "b77e9a79-7336-449c-ea4e-b1955009c9d6"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Average Marks:\n",
            " Problem Solving          2.304348\n",
            "Different Perspective    4.173913\n",
            "Risk Factor              3.217391\n",
            "Creative Hobbies         2.826087\n",
            "dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "print(df.to_markdown())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0bT_HsExsoCy",
        "outputId": "d563803a-a723-40eb-f374-7c53ae64d39a"
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "|    | Name                   |   Percieved creativity |   Innovative Ideas |   Creative Challenge |   Problem Solving |   Different Perspective |   Risk Factor |   Creative Hobbies |\n",
            "|---:|:-----------------------|-----------------------:|-------------------:|---------------------:|------------------:|------------------------:|--------------:|-------------------:|\n",
            "|  0 | Raghu                  |                    1.5 |                  3 |                  5   |                 1 |                     5   |           2.5 |                  5 |\n",
            "|  1 | Ashvadharani           |                    4   |                  4 |                  0   |                 5 |                     5   |           2.5 |                  5 |\n",
            "|  2 | Sangameshwaran S       |                    3.5 |                  4 |                  0   |                 3 |                     5   |           2.5 |                  0 |\n",
            "|  3 | My name is Gowtham     |                    3.5 |                  4 |                  0   |                 1 |                     5   |           4   |                  5 |\n",
            "|  4 | akshaya priya s        |                    5   |                  4 |                  0   |                 1 |                     5   |           4   |                  5 |\n",
            "|  5 | A sujit kumar          |                    5   |                  4 |                  0   |                 1 |                     0   |           2.5 |                  5 |\n",
            "|  6 | Pradeep R P            |                    3.5 |                  3 |                  0   |                 1 |                     2.5 |           2.5 |                  0 |\n",
            "|  7 | STEVE                  |                    2.5 |                  3 |                  2.5 |                 1 |                     1   |           2.5 |                  5 |\n",
            "|  8 | Keerthana              |                    3   |                  3 |                  5   |                 2 |                     0   |           4   |                  0 |\n",
            "|  9 | Lokesh                 |                    3.5 |                  3 |                  5   |                 5 |                     5   |           4   |                  0 |\n",
            "| 10 | Sushmidha              |                    4   |                  3 |                  2.5 |                 1 |                     5   |           4   |                  5 |\n",
            "| 11 | Kandha kamatchi S      |                    3   |                  3 |                  0   |                 2 |                     5   |           4   |                  0 |\n",
            "| 12 | Anusha                 |                    3.5 |                  3 |                  0   |                 5 |                     5   |           2.5 |                  0 |\n",
            "| 13 | Yuvaraj R              |                    3.5 |                  3 |                  0   |                 5 |                     5   |           4   |                  5 |\n",
            "| 14 | Ramesh Kumar B         |                    4   |                  3 |                  0   |                 2 |                     5   |           4   |                  0 |\n",
            "| 15 | Dineshkumar R A        |                    3.5 |                  3 |                  5   |                 2 |                     5   |           4   |                  0 |\n",
            "| 16 | Sudharsan.M.H          |                    2   |                  3 |                  0   |                 1 |                     2.5 |           2.5 |                  5 |\n",
            "| 17 | Devi priya P           |                    3.5 |                  3 |                  0   |                 3 |                     5   |           2.5 |                  5 |\n",
            "| 18 | Afshaan                |                    4   |                  4 |                  5   |                 2 |                     5   |           4   |                  5 |\n",
            "| 19 | Leo Das                |                    5   |                  5 |                  0   |                 1 |                     5   |           2.5 |                  0 |\n",
            "| 20 | Dharani                |                    3.5 |                  3 |                  0   |                 1 |                     5   |           2.5 |                  5 |\n",
            "| 21 | Sharthkumar Sabarish K |                    3.5 |                  3 |                  0   |                 5 |                     5   |           4   |                  5 |\n",
            "| 22 | Vijay Rajasekaran      |                    3.5 |                  3 |                  5   |                 2 |                     5   |           2.5 |                  0 |\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "\n",
        "# Select relevant columns\n",
        "creativity_columns = ['Percieved creativity', 'Innovative Ideas', 'Creative Challenge', 'Problem Solving', 'Creative Hobbies', 'Different Perspective', 'Risk Factor']\n",
        "creativity_data = df[creativity_columns]\n",
        "\n",
        "# Normalize numerical features\n",
        "scaler = MinMaxScaler()\n",
        "normalized_data = scaler.fit_transform(creativity_data)\n",
        "\n",
        "# Define equal weights for each feature\n",
        "equal_weight = 1 / len(creativity_columns)\n",
        "weights = {column: equal_weight for column in creativity_columns}\n",
        "\n",
        "# Calculate creativity score\n",
        "creativity_score = (normalized_data * list(weights.values())).sum(axis=1)\n",
        "\n",
        "# Assign creativity score to the DataFrame\n",
        "df['Creativity Score'] = creativity_score\n",
        "\n",
        "# Define thresholds for creativity levels\n",
        "threshold_low = 0.4\n",
        "threshold_high = 0.7\n",
        "\n",
        "# Categorize individuals based on creativity score\n",
        "df['Creativity Level'] = pd.cut(df['Creativity Score'], bins=[-1, threshold_low, threshold_high, 1],\n",
        "                                labels=['Low', 'Medium', 'High'], right=False)\n",
        "\n",
        "# Display the DataFrame with creativity scores and levels\n",
        "print(df[['Name', 'Creativity Score', 'Creativity Level']])\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qs3CIXJMeqCN",
        "outputId": "82845f27-b401-44b3-b09b-65ea1142bea9"
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                      Name  Creativity Score Creativity Level\n",
            "0                   Raghu           0.428571           Medium\n",
            "1            Ashvadharani           0.602041           Medium\n",
            "2         Sangameshwaran S          0.367347              Low\n",
            "3       My name is Gowtham          0.581633           Medium\n",
            "4          akshaya priya s          0.642857           Medium\n",
            "5            A sujit kumar          0.357143              Low\n",
            "6             Pradeep R P           0.153061              Low\n",
            "7                    STEVE          0.283673              Low\n",
            "8                Keerthana          0.382653              Low\n",
            "9                   Lokesh          0.653061           Medium\n",
            "10              Sushmidha           0.602041           Medium\n",
            "11      Kandha kamatchi S           0.382653              Low\n",
            "12                  Anusha          0.367347              Low\n",
            "13               Yuvaraj R          0.653061           Medium\n",
            "14         Ramesh Kumar B           0.423469           Medium\n",
            "15         Dineshkumar R A          0.545918           Medium\n",
            "16           Sudharsan.M.H          0.234694              Low\n",
            "17            Devi priya P          0.438776           Medium\n",
            "18                Afshaan           0.780612             High\n",
            "19                 Leo Das          0.428571           Medium\n",
            "20                 Dharani          0.367347              Low\n",
            "21  Sharthkumar Sabarish K          0.653061           Medium\n",
            "22      Vijay Rajasekaran           0.403061           Medium\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Extracting relevant columns for visualization\n",
        "names = df['Name']\n",
        "creativity_scores = df['Creativity Score']\n",
        "\n",
        "# Plotting the creativity scores\n",
        "plt.figure(figsize=(12, 8))\n",
        "plt.barh(names, creativity_scores, color='skyblue')\n",
        "plt.xlabel('Creativity Score')\n",
        "plt.title('Creativity Scores of Individuals')\n",
        "plt.grid(axis='x', linestyle='--', alpha=0.6)\n",
        "\n",
        "# Adding data labels\n",
        "for index, value in enumerate(creativity_scores):\n",
        "    plt.text(value, index, f'{value:.2f}', va='center', fontsize=10)\n",
        "\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 718
        },
        "id": "fn4GU5gGgi9O",
        "outputId": "e0c9d4b7-23b2-45d0-e2e2-ecac676110f4"
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}